#!/bin/sh

# checking system
PYTHON_VERSION=$(python3 -c "import sys; print('.'.join(map(str, sys.version_info[:2])))")
PYTHON_ROOT_DIR=$1/.heroku/python
PYTHON_SITE_PACKAGES_DIR=${PYTHON_ROOT_DIR}/lib/python${PYTHON_VERSION}/site-packages
BLENDER_VERSION=2.78c

# source directory
ILMBASE_SOURCE_DIR=$(pwd)/openexr/IlmBase
OPENEXR_SOURCE_DIR=$(pwd)/openexr/OpenEXR
OIIO_SOURCE_DIR=$(pwd)/oiio
BLENDER_SOURCE_DIR=$(pwd)/blender-${BLENDER_VERSION}

# build directory
BUILD_DIR=$1
DEP_INSTALL_DIR=$BUILD_DIR/.blender_dep
BLENDER_INSTALL_DIR=$PYTHON_SITE_PACKAGES_DIR

# cache directory
CACHE_DIR=$2
#ILMBASE_CACHE_DIR=$CACHE_DIR/.blender_dep/IlmBase
ILMBASE_CACHE_DIR=$CACHE_DIR/.blender_dep/OpenEXR
OPENEXR_CACHE_DIR=$CACHE_DIR/.blender_dep/OpenEXR
OIIO_CACHE_DIR=$CACHE_DIR/.blender_dep/OpenImageIO
BLENDER_CACHE_DIR=$CACHE_DIR/.blender/

echo "-----> Building Dependencies"
mkdir -p $DEP_INSTALL_DIR

# openexr/ilmbase
if [ ! -d $ILMBASE_CACHE_DIR ] || [ ! -d $OPENEXR_CACHE_DIR ]; then
  echo "-----> Building OpenEXR/IlmBase"
  echo "       Obtaining Source"
  git clone https://github.com/openexr/openexr.git
  
  echo "       Building IlmBase"
  mkdir build; cd build
  cmake $ILMBASE_SOURCE_DIR \
    -DCMAKE_INSTALL_PREFIX=$ILMBASE_CACHE_DIR
  make install
  cd ..; rm -rf build
  
  echo "       Building OpenEXR"
  mkdir build; cd build
  cmake $OPENEXR_SOURCE_DIR \
    -DCMAKE_INSTALL_PREFIX=$OPENEXR_CACHE_DIR \
    -DILMBASE_PACKAGE_PREFIX:PATH=$ILMBASE_CACHE_DIR
  make install
  cd ..; rm -rf build
  
  rm -rf $OPENEXR_SOURCE_DIR
fi
echo "       Installing IlmBase"
cp -a $ILMBASE_CACHE_DIR $DEP_INSTALL_DIR
echo "       Installing OpenEXR"
cp -a $OPENEXR_CACHE_DIR $DEP_INSTALL_DIR

# openimageio
if [ ! -d $OIIO_CACHE_DIR ]; then
  echo "-----> Building OpenImageIO"
  git clone https://github.com/OpenImageIO/oiio.git
  cd oiio
  git fetch
  OIIO_BRANCH=$(git branch -a | grep RB | python3 -c "import sys; print(sorted(map(lambda c: c.split('/')[-1], sys.stdin.read().splitlines()), key=lambda c: -float(c.split('-')[-1]))[1])")
  git checkout $OIIO_BRANCH
  cd ..
  mkdir build; cd build
  cmake $OIIO_SOURCE_DIR \
    -DCMAKE_INSTALL_PREFIX=$OIIO_CACHE_DIR \
    -DILMBASE_HOME=$ILMBASE_CACHE_DIR \
    -DOPENEXR_HOME=$OPENEXR_CACHE_DIR \
    -DOIIO_BUILD_TESTS=OFF \
    -DBUILD_TESTING=OFF \
    -DUSE_PYTHON=OFF \
    -DUSE_PYTHON3=OFF \
    -DUSE_QT=OFF
  make install
  cd ..; rm -rf build
  
  rm -rf $OIIO_SOURCE_DIR
fi
echo "       Installing OpenImageIO"
cp -a $OIIO_CACHE_DIR $DEP_INSTALL_DIR

if [ ! -d $BLENDER_CACHE_DIR ]; then
  echo "       Building Blender"
  curl -O "http://download.blender.org/source/blender-${BLENDER_VERSION}.tar.gz"
  tar fxz blender-${BLENDER_VERSION}.tar.gz
  
  mkdir build; cd build
  cmake $BLENDER_SOURCE_DIR \
    -DWITH_PLAYER=OFF \
    -DWITH_PYTHON_INSTALL=OFF \
    -DWITH_PYTHON_MODULE=ON \
    -DWITH_INSTALL_PORTABLE=ON \
    -DOPENEXR_ROOT_DIR=$OPENEXR_CACHE_DIR \
    -DOPENIMAGEIO_ROOT_DIR=$OIIO_CACHE_DIR \
    -DPYTHON_VERSION=$PYTHON_VERSION \
    -DPYTHON_ROOT_DIR=$PYTHON_ROOT_DIR \
    -DPYTHON_INCLUDE_DIR=$PYTHON_ROOT_DIR/include/python${PYTHON_VERSION}m/ \
    -DPYTHON_LIBRARY=$PYTHON_ROOT_DIR/lib/libpython3.5m.so \
    -DCMAKE_INSTALL_PREFIX=$BLENDER_CACHE_DIR
  make install
  cd ..; rm -rf build
fi
echo "       Installing Blender to ${BLENDER_INSTALL_DIR}"
mkdir -p $BLENDER_INSTALL_DIR
cp -a $BLENDER_CACHE_DIR/* $BLENDER_INSTALL_DIR

export LD_LIBRARY_DIR=$DEP_INSTALL_DIR/IlmBase/lib:$DEP_INSTALL_DIR/OpenEXR/lib:$DEP_INSTALL_DIR/OpenImageIO/lib:$LD_LIBRARY_DIR

# checing blender module
which python3
python3 -c "import bpy;"
echo $?
exit 0
